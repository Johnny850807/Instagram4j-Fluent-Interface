@startuml

title __API's Class Diagram__\n

  namespace tw.waterball.api {
    abstract class tw.waterball.api.AbstractInstagramId {
        - id : String
        + AbstractInstagramId()
        + getId()
    }
  }
  

  namespace tw.waterball.api {
    abstract class tw.waterball.api.AbstractInstagramPk {
        - pk : long
        + AbstractInstagramPk()
        + getPK()
        # AbstractInstagramPk()
        # setPk()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.Instagram {
        {abstract} + login()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramComment {
        {abstract} + getCommenter()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramFeed {
        {abstract} + comment()
        + foreachAllCommenters()
        + foreachCommenters()
        + foreachDistinctCommenters()
        + foreachRecentCommenters()
        {abstract} + getContent()
        + getPagedAllCommenters()
        + getPagedAllComments()
        {abstract} + getPagedCommenters()
        {abstract} + getPagedComments()
        {abstract} + getPagedDistinctCommenters()
        {abstract} + getRecentCommenters()
        {abstract} + getRecentComments()
        {abstract} + like()
        {abstract} + unlike()
        + when()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramId {
        {abstract} + getId()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramInbox {
        + foreachPendingThread()
        + foreachThread()
        + foreachUnseenThread()
        {abstract} + getRecentPendingThreads()
        {abstract} + getRecentThreads()
        {abstract} + getRecentUnseenThreads()
        {abstract} + hasPendingRequest()
        {abstract} + hasUnseen()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramInboxThread {
        + foreachRecentMessage()
        + getAllMessages()
        {abstract} + getMessage()
        {abstract} + getMessages()
        {abstract} + getRecentMessages()
        {abstract} + getUsers()
        {abstract} + hasNewer()
        {abstract} + hasOlder()
        {abstract} + reply()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramMediaType {
        {static} + ALBUM : int
        {static} + PHOTO : int
        {static} + VIDEO : int
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramPendingInboxThread {
        {abstract} + approve()
        {abstract} + decline()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramPk {
        {abstract} + getPK()
    }
  }
  

  namespace tw.waterball.api {
    class tw.waterball.api.InstagramProperties {
        {static} - FILENAME : String
        {static} - properties : Properties
        {static} + password()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramSession {
        {abstract} + comment()
        {abstract} + getUsername()
        {abstract} + inbox()
        {abstract} + like()
        {abstract} + searchFeedsByTag()
        {abstract} + searchUser()
        + searchUsers()
    }
  }
  

  namespace tw.waterball.api {
    interface tw.waterball.api.InstagramUser {
        {abstract} + follow()
        + foreachAllFollowers()
        + foreachAllFollowings()
        + foreachFeed()
        + foreachFollowers()
        + foreachFollowings()
        + foreachRecentFollowers()
        + foreachRecentFollowings()
        {abstract} + getCategory()
        {abstract} + getCity()
        + getFirstFeed()
        + getFirstFeedOptional()
        + getPagedAllFeeds()
        + getPagedAllFollowers()
        + getPagedAllFollowings()
        {abstract} + getPagedFeeds()
        {abstract} + getPagedFollowers()
        {abstract} + getPagedFollowings()
        {abstract} + getRecentFeeds()
        {abstract} + getRecentFollowers()
        {abstract} + getRecentFollowings()
        {abstract} + getUsername()
        {abstract} + hasFollowMe()
        + hasNotFollowMe()
        + isPrivate()
        {abstract} + isPublic()
        {abstract} + likeRecentFeeds()
        {abstract} + sendDM()
        {abstract} + unfollow()
        + when()
    }
  }
  

  tw.waterball.api.AbstractInstagramId .up.|> tw.waterball.api.InstagramId
  tw.waterball.api.AbstractInstagramPk .up.|> tw.waterball.api.InstagramPk


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
